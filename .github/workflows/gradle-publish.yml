
name: Gradle Package

on:
  push:
     branches: 
      - master

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
   
    
    steps:
   
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Npm install
      working-directory: admin-ui
      run: npm install 

    - name: Angular install
      working-directory: admin-ui
      run: npm install -g @angular/cli

    - name: Angular build
      working-directory: admin-ui
      run: npm run build

    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
  
    - name: Build with Gradle  
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build -Ptgtok=${{ secrets.MY_BOT }} -Pmongo_uri=${{ secrets.MY_DB }}


    - name: Upload JAR
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: bot/build/lib/bot.jar


    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
#    - name: Publish to GitHub Packages
#      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
#      with:
#        arguments: publish
#      env:
#        USERNAME: ${{ github.actor }}
#        TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Download JAR
        uses: actions/download-artifact@v2
        with:
          name: artifact

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          use_existing_version_if_available: false
          application_name: victorina-bot
          environment_name: Victorina-bot-env
          version_label: ${{ github.sha }}-test
          region: eu-central-1
          deployment_package: bot.jar